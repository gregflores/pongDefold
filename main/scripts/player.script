local function movePaddle(self, distance)
	local pos = go.get_position()
	pos.y = pos.y + distance
	if pos.y > (self.bgMaxY - self.paddleEdge) then
		pos.y = self.bgMaxY - self.paddleEdge
	elseif pos.y < (self.paddleEdge) then
		pos.y = self.paddleEdge
	end
	go.set_position(pos)
end

go.property("paddleSpeed", 100)

function init(self)
	self.id = go.get_id()
	self.size = go.get("#paddle", "size")
	self.paddleEdge = self.size.y * 0.5
	self.bgSize = go.get("/background#background", "size")
	self.bgMaxY = self.bgSize.y
	self.dir = 0
	self.pause = false
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	if not self.pause then 
		if self.dir then
			local velocity = self.paddleSpeed * self.dir
			local distance = velocity * dt
			movePaddle(self, distance)
			self.dir = 0
		end
	end
end

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("pause") then
		self.pause = message.pause
	end
end

function on_input(self, action_id, action)
	if action_id == hash("player_left_up") and self.id == hash("/player_left") then
		self.dir = 1
	elseif action_id == hash("player_left_down") and self.id == hash("/player_left") then
		self.dir = -1
	elseif action_id == hash("player_right_up") and self.id == hash("/player_right") then
		self.dir = 1
	elseif action_id == hash("player_right_down") and self.id == hash("/player_right") then
		self.dir = -1
	end
		
	
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
